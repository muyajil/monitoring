version: "3.5"

services:
  # START GRAFANA
  grafana:
    image: grafana/grafana:latest
    environment:
      VIRTUAL_HOST: grafana.${TLD}
      LETSENCRYPT_HOST: grafana.${TLD}
      VIRTUAL_PORT: 3000
      GF_RENDERING_SERVER_URL: http://renderer:8081/render
      GF_RENDERING_CALLBACK_URL: http://grafana:3000/
      GF_LOG_FILTERS: rendering:debug
    volumes:
      - ${VOLUMES_PATH}/grafana:/var/lib/grafana
    user: "1000"
    depends_on:
      - prometheus
      - renderer
    restart: unless-stopped
    networks:
      - base-network
      - monitoring-network
  renderer:
    image: grafana/grafana-image-renderer:latest
    networks:
      - monitoring-network
    restart: unless-stopped
  # END GRAFANA
  # START PROMETHEUS
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ${VOLUMES_PATH}/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    user: "1000"
    ports:
      - "9090:9090"
    networks:
      - monitoring-network
    depends_on:
      - nodeexporter
      - cadvisor
  # END PROMETHEUS
  # START NODEEXPORTER
  nodeexporter:
    image: prom/node-exporter:latest
    user: root
    privileged: true
    volumes:
      - /:/host:ro
    command:
      - '--path.rootfs=/host'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
    - "9100:9100"
    restart: unless-stopped
    networks:
      - monitoring-network
  # END NODEEXPORTER
  # START BLACKBOX EXPORTER
  blackbox-exporter:
    image: prom/blackbox-exporter:latest
    restart: unless-stopped
    ports:
      - "9115:9115"
    networks:
      - base-network
      - monitoring-network
  # END BLACKBOX EXPORTER
  # START CADVISOR
  cadvisor:
    image: google/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - monitoring-network
  # END CADVISOR

networks:
  base-network:
    external: true
  monitoring-network:
    name: monitoring-network
