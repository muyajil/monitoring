version: "3.5"

services:
  # START GRAFANA
  grafana:
    image: grafana/grafana:latest
    environment:
      VIRTUAL_HOST: grafana.${TLD}
      PROXY_LOCATION: grafana
      VIRTUAL_PORT: 3000
    volumes:
      - ${VOLUMES_PATH}/grafana:/var/lib/grafana
    user: "1000"
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - base-network
      - monitoring-network
  # END GRAFANA
  # START PROMETHEUS
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ${VOLUMES_PATH}/prometheus/etc:/etc/prometheus/
      - ${VOLUMES_PATH}/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    user: "1000"
    networks:
      - monitoring-network
    depends_on:
      - nodeexporter
      - cadvisor
  # END PROMETHEUS
  # START NODEEXPORTER
  nodeexporter:
    image: prom/node-exporter:latest
    user: root
    privileged: true
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    restart: unless-stopped
    networks:
      - monitoring-network
  # END NODEEXPORTER
  # START CADVISOR
  cadvisor:
    image: google/cadvisor:latest
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped
    networks:
      - monitoring-network
  # END CADVISOR

networks:
  base-network:
    external: true
  monitoring-network:
    name: monitoring-network